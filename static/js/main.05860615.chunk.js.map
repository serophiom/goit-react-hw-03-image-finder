{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/FetchSearch/FetchSearch.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/App/App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","className","this","type","autocomplete","autofocus","placeholder","onChange","Component","FetchSearch","query","pageNumber","fetch","then","response","json","propTypes","PropTypes","string","isRequired","number","ImageGalleryItem","id","url","name","openModal","src","alt","onClick","ImageGallery","images","clickOnImage","map","webformatURL","tags","Button","clickOnButton","LoaderOfImages","color","height","width","modalRoot","document","querySelector","Modal","handleKeydown","code","closeModal","handleBackdropClick","target","window","addEventListener","removeEventListener","modalImage","createPortal","App","isLoad","modalWindow","getImageName","handleAddImagesButton","nextPage","page","hits","finally","scroll","scrollTo","top","documentElement","scrollHeight","behavior","idOfElement","dataset","currentImage","filter","image","forEach","element","largeImageURL","handleSearchSubmit","modalSwith","prevProps","prevState","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05860615.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css'\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        imageName: '',\r\n    };\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        if (this.state.imageName.trim() === '') {\r\n           alert('Enter the image name');\r\n           return;\r\n        }\r\n        \r\n        this.props.onSubmit(this.state.imageName);\r\n        this.setState({ imageName: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autocomplete=\"off\"\r\n                autofocus\r\n                placeholder=\"Search images and photos\"\r\n                value={this.state.imageName}\r\n                onChange={this.handleNameChange}\r\n                />\r\n            </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst ApiKey = '21951044-669b58be8946ea9fe70fb579e';\r\n\r\nfunction FetchSearch (query, pageNumber) {\r\n        return fetch(`https://pixabay.com/api/?q=${query}&page=${pageNumber}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(response => response.json());\r\n}\r\n\r\nFetchSearch.propTypes = {\r\n        query: PropTypes.string.isRequired,\r\n        pageNumber: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default FetchSearch;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem ({ id, url, name, openModal }) {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" key={id}>\r\n            <img src={url} alt={name} data-id={id} className=\"ImageGalleryItem-image\" onClick={openModal}/>\r\n        </li>\r\n    );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.css';\r\n\r\nfunction ImageGallery ({ images, clickOnImage }) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images && images.map(({ id, webformatURL, tags }) => (\r\n                <ImageGalleryItem \r\n                id={id}\r\n                url={webformatURL}\r\n                name={tags}\r\n                openModal={clickOnImage}\r\n                />   \r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    clickOnImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nfunction Button ({ clickOnButton }) {\r\n    return (\r\n        <button className=\"Button\" type=\"button\" onClick={clickOnButton}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    clickOnButton: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nfunction LoaderOfImages () {\r\n    return (\r\n       <Loader\r\n       type=\"Rings\"\r\n       color=\"#00BFFF\"\r\n       height={80}\r\n       width={80}\r\n       /> \r\n    );\r\n}\r\n\r\nexport default LoaderOfImages;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeydown);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown);\r\n    };\r\n\r\n    handleKeydown = (event) => {\r\n        if (event.code === \"Escape\") {\r\n            this.props.closeModal();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = (event) => {\r\n        if (event.target === event.currentTarget) {\r\n            this.props.closeModal();\r\n            \r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { modalImage, alt } = this.props;\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                <img src={modalImage} alt={alt} />\r\n            </div>\r\n            </div>,\r\n        modalRoot\r\n        )\r\n    };\r\n}\r\n\r\nModal.propTypes = {\r\n    modalImage: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    closeModal: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\nimport Searchbar from '../Searchbar/Searchbar';\nimport FetchSearch from '../FetchSearch/FetchSearch';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport LoaderOfImages from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    pageNumber: 1,\n    isLoad: false,\n    modalWindow: false,\n    modalImage: '',\n    alt: ''\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imageName !== this.state.imageName) {\n      const startPage = 1;\n      this.setState({ isLoad: true, pageNumber: 1 });\n      FetchSearch(this.state.imageName, startPage).then(response => {\n        this.setState({ images: response.hits, isLoad:false });\n      })\n    }\n  };\n\n  getImageName = (value) => {\n    this.setState({ imageName: value });\n  };\n\n  handleAddImagesButton = () => {\n    let nextPage = this.state.pageNumber + 1;\n    this.setState({ page: nextPage, isLoad: true });\n    FetchSearch(this.state.imageName, nextPage).then(response => {\n      this.setState({\n        images: [...this.state.images, ...response.hits], isLoad:false });\n    }).finally(() => {\n      this.scroll();\n    })\n  };\n\n  scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    })\n  }\n\n  openModal = event => {\n    const idOfElement = +event.target.dataset.id;\n    const currentImage = this.state.images.filter((image) => {\n      return image.id === idOfElement;\n    });\n    currentImage?.forEach((element) => {\n      this.setState({ modalImage: element.largeImageURL, alt: element.tags })\n    });\n    this.setState({ modalWindow: true });\n  };\n\n  handleSearchSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  modalSwith = () => {\n    this.setState(({ modalWindow }) => ({ modalWindow: !modalWindow}))\n  }\n\n  render() {\n    const { images, isLoad, modalWindow, modalImage, alt } = this.state;\n\n    return (\n      <>\n      <Searchbar onSubmit={this.handleSearchSubmit} />\n      <ImageGallery images={images} clickOnImage={this.openModal} />\n      {images.length > 0 && <Button clickOnButton={this.handleAddImagesButton} />}\n      {isLoad && <LoaderOfImages />}\n      {modalWindow && (\n        <Modal modalImage={modalImage} alt={alt} closeModal={this.modalSwith} />\n      )}\n      </>\n  );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport './index.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}